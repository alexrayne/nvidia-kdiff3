This file contains some feature-wishes for future KDiff3-versions.

TODO
====

- Automatic line wrap for too long lines in the difference windows
- Printing of the diff-windows (requires automatic line wrap)
- Undo function in the merge-editor.
- More viewing options for directory widget.

- And one observation. When select Cyrillic charset - it looks like it was
  not saved. When open this dialog again - Latin charset is selected anyway.
- Add options to specify a language and charset.
- Ask before saving to a file that already exists (optionally).
- Don't overwrite existing .orig-file, when saving the second time.

- File Menu: Close (Ctrl-F4): Close current file (check if saved and forget the data)
- Dirview:
   - Multiselections: Changing Operations or applying ops for all selected items.
   - Optionally show size/date for A/B/C
   - Choose what to see (all or only different items)
   - If only different items are visible: copy the others nevertheless to destdir.
   - Improve Ctrl-1/2/3 shortcuts in Dirview.
   - Warnung wenn Datum in B oder C älter als A ist.
   - Zielverzeichnis nachträglich änderbar
   - Bei Kopie von Remote nach lokal: Auf jeden Fall das modification Datum setzen.
   - Ctrl-Space doesn't work when a file comparison takes place.
   - Option to allow case-insensitive filename-matching.
- Options to show/suppress annoying messages

- Unicode-support

- What's this-Help.
- Tip of the day.

More Statistics before the merge begins:
- How many files are there?
- How many files are equal/different?
- How many files would be copies/merged/ignored?

- Allow to view and merge CVS-conflict files (and diff3-output) and allow to save output
  with conflicts in diff3 output-format.
  
- Provide configure-rules for systems without KDE. (I need help here.)

- Allow different comment-styles (e.g. via a regexp for comments)

- Possibility to jump to next difference in the same line (for very long lines).

- Allow analysis of unified directory-diff/patch-file.

- Add example for line-matching preprocessor to the documentation.
  Simple testcase: Consider file a.txt (6 lines):
      aa
      ba
      ca
      da
      ea
      fa
  And file b.txt (3 lines):
      cg
      dg
      eg
  And the following line matching preprocessor command, that replaces 'g' with 'a':
      /usr/bin/perl -p -e 's/g/a/;'
  Without that command the following lines would be placed next to each other:
      aa - cg
      ba - dg
      ca - eg
      da
      ea
      fa
  But with this command the result of the comparison would be:
      aa
      ba
      ca - cg
      da - dg
      ea - eg
      fa

